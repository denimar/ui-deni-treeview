"use strict";!function(){angular.module("uiDeniTreeview",[])}(),function(){function e(e){e.put("ui-deni-treeview.view.html",'<div class="ui-deni-treeview-container" ng-class="ctrl.theme">\n  <div>\n    <ui-deni-treeview-item theme="{{ctrl.theme}}" item="ctrl.rootItem" level=0 ng-if="ctrl.showRoot"></ui-deni-treeview-item>\n    <div ng-repeat="item1 in ctrl.rootItem.children">\n      <ui-deni-treeview-item theme="{{ctrl.theme}}" parent="ctrl.rootItem" item="item1" level=1></ui-deni-treeview-item>\n      <div class="ng-hide" ng-repeat="item2 in item1.children" ng-show="item1.expanded">\n        <ui-deni-treeview-item theme="{{ctrl.theme}}" parent="item1" item="item2" level=2></ui-deni-treeview-item>\n        <div class="ng-hide" ng-repeat="item3 in item2.children" ng-show="item2.expanded">\n          <ui-deni-treeview-item theme="{{ctrl.theme}}" parent="item2" item="item3" level=3></ui-deni-treeview-item>\n          <div class="ng-hide" ng-repeat="item4 in item3.children" ng-show="item3.expanded">\n            <ui-deni-treeview-item theme="{{ctrl.theme}}" parent="item3" item="item4" level=4></ui-deni-treeview-item>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>')}angular.module("uiDeniTreeview").run(e),e.$inject=["$templateCache"]}(),function(){function e(e){e.put("ui-deni-treeview-item.view.html",'<div class="ui-deni-treeview-item-container ng-hide"  ng-show="!ctrl.item.hidden" ng-class="ctrl.getNgClassItem($parent.ctrl, ctrl)" ng-mousedown="ctrl.itemMousedown($parent.ctrl, this, ctrl.item)">\n  <div class="expand-button ng-hide" ng-click="ctrl.expandButtonClick(this, ctrl.item)" ng-class="ctrl.getNgClassExpandButton($parent.ctrl, ctrl)" ng-show="!ctrl.item.isLeaf"></div>\n  <div class="checkbox ng-hide" ng-click="ctrl.checkboxClick(this, ctrl.item)" ng-class="ctrl.getNgClassCheckbox($parent.ctrl, ctrl)" ng-show="$parent.ctrl.checkbox">\n    <div class="undetermined ng-hide" ng-show="ctrl.isUndetermined(ctrl.item)"></div>\n  </div>\n  <div class="icon-and-text" ng-class="{\'select-row\': $parent.ctrl.selectRow, \'selected\' : (!$parent.ctrl.selectRow && ctrl.isSelected($parent.ctrl, ctrl.item))}">\n    <div class="icon ng-hide" ng-class="ctrl.getNgClassIcon(ctrl, ctrl.item)" ng-dblclick="ctrl.itemDoubleClick($parent.ctrl, this, ctrl.item)" ng-show="$parent.ctrl.showIcon"></div>\n    <div class="text" ng-dblclick="ctrl.itemDoubleClick($parent.ctrl, this, ctrl.item)">\n      <span class="text-inner unselectable" ng-bind="ctrl.item.text" unselectable="on"></span>\n    </div>\n  </div\n</div>')}angular.module("uiDeniTreeview").run(e),e.$inject=["$templateCache"]}(),function(){angular.module("uiDeniTreeview").constant("uiDeniTreeviewEnum",{CHECKBOX_STATE:{CHECKED:1,UNCHECKED:2,UNDETERMINED:3}})}(),function(){angular.module("uiDeniTreeview").constant("uiDeniTreeviewConstant",{ROOT_ITEM:{id:-1,text:"root",expanded:!0,root:!0}})}(),function(){function e(){var e=this;e.implementEvents=function(e){e.$on("onexpand",function(t,n){t.stopPropagation(),e.$emit("onexpanditem",n)}),e.$on("oncheck",function(t,n){t.stopPropagation(),e.$emit("oncheckitem",n)}),e.$on("onselect",function(t,n){t.stopPropagation(),e.$emit("onselectitem",n)})}}angular.module("uiDeniTreeview").service("uiDeniTreeviewEventsService",e)}();var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(){function e(e,t,n,i,r,c){function o(e,t){var n=l(e,t);angular.forEach(n,function(e){e.expanded||(e.expanded=!0)}),e.ctrl.selectedItem=t,e.$broadcast("scrollintoview",t)}function l(e,t){for(var n=[],i=t;;){if(i=a(e,i),!angular.isDefined(i))break;if(i.root&&!e.showRoot)break;n.push(i)}return n}function a(e,t){if(t.parent===e.ctrl.rootItem.id)return e.ctrl.showRoot?e.ctrl.rootItem:void 0;var n=h.findFolder(e,t.parent);return n}function u(e,t,n){for(var i=0;i<e.length;i++){for(var r=e[i],c=!0,o=0;o<n.length;o++){var l=n[o];r[l]!==t[l]&&(c=!1)}if(c&&r.isLeaf===t.isLeaf)return r;if(r.children){var a=u(r.children,t,n);if(a)return a}}}function s(e){var t={};if("number"==typeof e)t.id=e;else if("string"==typeof e)t.id=parseInt(e);else{if("object"!==("undefined"==typeof e?"undefined":_typeof(e)))throw new Error("Parameter set in a wrong way.");t=e}return t}function d(e,t,n,i){var r=n||[];if(angular.isDefined(i)){if(!angular.isArray(r))throw new Error("When item param is set the data must be an array.");i.children=r}else angular.isArray(r)?e.rootItem.children=r:e.rootItem=angular.merge(t.ROOT_ITEM,r)}function m(e){e.children&&angular.forEach(e.children,function(t){t.state=e.state,m(t)})}var h=this;h.setDefaultValues=function(e,t,n){e.theme=e.theme||"classic",t.addClass(e.theme),e.showIcon=e.showIcon||!0,e.showRoot=e.showRoot||!1,e.selectRow=e.selectRow||!1,e.lazyLoad=e.lazyLoad||!1,e.marginItems=e.marginItems||30,e.autoLoad=e.autoLoad||!0,e.url||e.lazyLoad?e.autoLoad&&h.load(e.scope):e.items&&d(e,n,e.items)},h.load=function(i,r){var o=t.defer(),l=r||i.ctrl.rootItem,a=angular.copy(l);if(i.ctrl.url){var u={params:{lazyLoad:i.ctrl.lazyLoad,item:a}};e.get(i.ctrl.url,u).then(function(e){d(i.ctrl,c,e.data,r),o.resolve(e.data),n(function(){i.$emit("onload",e.data)})},function(e){var t="Error loading data.";throw new Error(t)})}else if(i.ctrl.lazyLoad)!function(){delete l.children;var e=i.$watch("ctrl.rootItem",function(t,n){t!==n&&(o.resolve(l.children),e())},!0);i.$emit("onload",l)}();else{var s="To use load function you must define lazyLoad:true or a valid url.";console.error(s),o.reject(s)}return o.promise},h.loadData=function(e,t,n){d(e.ctrl,c,t,n)},h.reload=function(e){return h.load(e)},h.getCheckedItems=function(e,t){var n=[],r=t||e.ctrl.rootItem.children;return angular.forEach(r,function(t){if(t.isLeaf)t.state===i.CHECKBOX_STATE.CHECKED&&n.push(t);else if(angular.isDefined(t.state)&&t.state!==i.CHECKBOX_STATE.UNCHECKED){var r=t.children;if(!t.expanded&&t.state===i.CHECKBOX_STATE.CHECKED){var c=angular.copy(t);e.$emit("onexpanditem",c),r=c.children,m(c)}if(r){var o=h.getCheckedItems(e,r);n=n.concat(o)}}}),n},h.checkItem=function(e,t){var n=h.findItem(e,t);e.$broadcast("checkitem",n)},h.checkAll=function(e,t){e.$broadcast("checkall")},h.uncheckItem=function(e,t){},h.uncheckAll=function(e,t){e.$broadcast("uncheckall")},h.invertCheckItem=function(e,t){e.$broadcast("invertcheckitem")},h.invertAllChecks=function(e,t){e.$broadcast("invertallchecks")},h.getCheckedIds=function(e,t){var n=h.getCheckedItems(e,t),i=[];return angular.forEach(n,function(e){i.push(e.id)}),i},h.getSelectedItem=function(e){return e.ctrl.selectedItem},h.findFolder=function(e,t){var n=s(t),i=Object.keys(n),r=u(e.ctrl.rootItem.children,n,i);if(r)return r;throw new Error("Folder not found!")},h.findItem=function(e,t){var n=s(t);n.isLeaf=!0;var i=Object.keys(n),r=u(e.ctrl.rootItem.children,n,i);if(r)return r;throw new Error("Item not found!")},h.selectFolder=function(e,t){var n=h.findFolder(e,t);o(e,n)},h.selectItem=function(e,t){var n=h.findItem(e,t);o(e,n)}}angular.module("uiDeniTreeview").service("uiDeniTreeviewService",e),e.$inject=["$http","$q","$timeout","uiDeniTreeviewEnum","uiDeniTreeviewApiService","uiDeniTreeviewConstant"]}(),function(){function e(){function e(e,t){return{checkAll:function(){return t.checkAll(e)},checkItem:function(n){return t.checkItem(e,n)},findFolder:function(n){return t.findFolder(e,n)},findItem:function(n){return t.findItem(e,n)},getCheckedIds:function(){return t.getCheckedIds(e)},getCheckedItems:function(){return t.getCheckedItems(e)},getSelectedItem:function(){return t.getSelectedItem(e)},invertAllChecks:function(){return t.invertAllChecks(e)},invertCheckItem:function(n){return t.invertCheckItem(e,n)},load:function(n){return t.load(e,n)},loadData:function(n,i){return t.loadData(e,n,i)},reload:function(){return t.reload(e)},uncheckAll:function(){return t.uncheckAll(e)},selectFolder:function(n){t.selectFolder(e,n)},selectItem:function(n){t.selectItem(e,n)},uncheckItem:function(n){return t.uncheckItem(e,n)}}}var t=this;t.implementApi=function(t,n,i){n.each(function(){angular.element(this).init.prototype.api=e(t,i)})}}angular.module("uiDeniTreeview").service("uiDeniTreeviewApiService",e)}(),function(){function e(e,t,n){var i=this;i.implementEvents=function(i){i.$on("scrollintoview",function(t,n){i.ctrl.item===n&&(console.log(n),e(function(){i.ctrl.element.get(0).scrollIntoView(!1)}))}),i.$on("checkitem",function(e,r){i.ctrl.item.isLeaf&&i.ctrl.item===r&&(i.ctrl.item.state=n.CHECKBOX_STATE.CHECKED,t.refreshCheckboxStateParents(i.ctrl))}),i.$on("checkall",function(e){i.ctrl.item.isLeaf&&(i.ctrl.item.state=n.CHECKBOX_STATE.CHECKED,t.refreshCheckboxStateParents(i.ctrl))}),i.$on("uncheckitem",function(e,r){i.ctrl.item.isLeaf&&i.ctrl.item===r&&(i.ctrl.item.state=n.CHECKBOX_STATE.UNCHECKED,t.refreshCheckboxStateParents(i.ctrl))}),i.$on("uncheckall",function(e){i.ctrl.item.isLeaf&&(i.ctrl.item.state=n.CHECKBOX_STATE.UNCHECKED,t.refreshCheckboxStateParents(i.ctrl))}),i.$on("invertcheckitem",function(e,n){i.ctrl.item.isLeaf&&i.ctrl.item===n&&(t.invertStateItem(i.ctrl.item),t.refreshCheckboxStateParents(i.ctrl))}),i.$on("invertallchecks",function(e){i.ctrl.item.isLeaf&&(t.invertStateItem(i.ctrl.item),t.refreshCheckboxStateParents(i.ctrl))})}}angular.module("uiDeniTreeview").service("uiDeniTreeviewItemEventsService",e),e.$inject=["$timeout","uiDeniTreeviewItemService","uiDeniTreeviewEnum"]}(),function(){function e(e){function t(e,n,i){e&&angular.forEach(e,function(e){e.hidden=!n,i&&e.expanded&&t(e.children,n,i)})}function n(e){e.children&&angular.forEach(e.children,function(t){t.state=e.state,n(t)})}function i(e){if(angular.isDefined(e.parent))return e.parent.children}function r(e){for(var t=0;t<e.length;t++){var n=e[t];if(!o.isChecked(n))return!1}return!0}function c(e){for(var t=0;t<e.length;t++){var n=e[t];if(!o.isUnchecked(n))return!1}return!0}var o=this;o.setDefaultValues=function(e,t){e.ctrl.item.expanded=e.ctrl.item.expanded||!1,e.ctrl.hasChild=!(!e.ctrl.item.children&&!e.$parent.ctrl.lazyLoad),e.ctrl.root=e.ctrl.item.root||!1,e.ctrl.item.parent=e.ctrl.parent.id;var n=5+e.ctrl.level*e.$parent.ctrl.marginItems;e.$parent.ctrl.showRoot||(n-=e.$parent.ctrl.marginItems),t.css("padding-left",n+"px")},o.getNgClassItem=function(e,t){var n=[t.theme];return e.selectRow&&(n.push("select-row"),t.isSelected(e,t.item)&&n.push("selected")),n},o.getNgClassExpandButton=function(e,t){var n=[];return t.hasChild&&n.push("hasChild"),t.item.expanded?n.push("expanded"):n.push("colapsed"),t.loading&&n.push("loading"),t.isSelected(e,t.item)&&n.push("selected"),n},o.getNgClassCheckbox=function(e,t){var n=[];return t.isChecked(t.item)&&n.push("checked"),t.isSelected(e,t.item)&&n.push("selected"),n},o.getNgClassIcon=function(e,t){var n=[];return t.isLeaf&&n.push("isleaf"),t.expanded&&n.push("expanded"),n},o.expandButtonClick=function(e,t){t.expanded=!t.expanded},o.checkboxClick=function(e,t){o.isChecked(t)?o.uncheckNode(e,t):o.checkNode(e,t),e.$emit("oncheck",t)},o.checkNode=function(t,i){i.state=e.CHECKBOX_STATE.CHECKED,n(i),o.refreshCheckboxStateParents(t.ctrl)},o.uncheckNode=function(t,i){i.state=e.CHECKBOX_STATE.UNCHECKED,n(i),o.refreshCheckboxStateParents(t.ctrl)},o.invertCheckNode=function(e,t){o.invertStateItem(t),n(t),o.refreshCheckboxStateParents(e.ctrl)},o.itemMousedown=function(e,t,n){var i=angular.element(event.target),r=function(){e.selectedItem=n,t.$emit("onselect",n)};e.selectRow?r():(i.is(".icon-and-text")||i.is(".icon")||i.is(".text-inner")||i.is(".text"))&&r()},o.itemDoubleClick=function(e,t,n){o.expandButtonClick(t,n)},o.isSelected=function(e,t){return angular.equals(e.selectedItem,t)},o.isChecked=function(t){return t.state===e.CHECKBOX_STATE.CHECKED},o.isUnchecked=function(t){return t.state===e.CHECKBOX_STATE.UNCHECKED},o.isUndetermined=function(t){return t.state===e.CHECKBOX_STATE.UNDETERMINED},o.expandItem=function(e,n){n.expanded?!function(){e.ctrl.loading=!0;var i=function(){n.children&&t(n.children,!0,!0),e.ctrl.loading=!1};e.$parent.ctrl.lazyLoad?angular.isDefined(n.children)?i():e.$parent.ctrl.element.api.load(n).then(function(e){i()}):i()}():t(n.children,!1,!0)},o.refreshCheckboxStateParents=function(t){if(t&&!t.root&&angular.isDefined(t.parent)){var n=i(t),l=r(n);if(l)t.parent.state=e.CHECKBOX_STATE.CHECKED;else{var a=c(n);a?t.parent.state=e.CHECKBOX_STATE.UNCHECKED:t.parent.state=e.CHECKBOX_STATE.UNDETERMINED}o.refreshCheckboxStateParents(t.parent.ctrl)}},o.invertStateItem=function(t){o.isChecked(t)?t.state=e.CHECKBOX_STATE.UNCHECKED:t.state=e.CHECKBOX_STATE.CHECKED}}angular.module("uiDeniTreeview").service("uiDeniTreeviewItemService",e),e.$inject=["uiDeniTreeviewEnum"]}(),function(){function e(e,t,n){this.scope=e,this.rootItem=n.ROOT_ITEM}angular.module("uiDeniTreeview").controller("uiDeniTreeviewController",e),e.$inject=["$scope","uiDeniTreeviewService","uiDeniTreeviewConstant"]}(),function(){function e(e){this.getNgClassItem=e.getNgClassItem,this.getNgClassExpandButton=e.getNgClassExpandButton,this.getNgClassCheckbox=e.getNgClassCheckbox,this.getNgClassIcon=e.getNgClassIcon,this.expandButtonClick=e.expandButtonClick,this.checkboxClick=e.checkboxClick,this.itemMousedown=e.itemMousedown,this.itemDoubleClick=e.itemDoubleClick,this.isSelected=e.isSelected,this.isChecked=e.isChecked,this.isUndetermined=e.isUndetermined}angular.module("uiDeniTreeview").controller("uiDeniTreeviewItemController",e),e.$inject=["uiDeniTreeviewItemService"]}(),function(){function e(e,t,n,i,r){return{restrict:"E",scope:{},bindToController:{url:"=?",autoLoad:"=?",checkbox:"=?",items:"=?",lazyLoad:"=?",selectRow:"=?",showIcon:"=?",showRoot:"=?",theme:"=?"},controller:"uiDeniTreeviewController",controllerAs:"ctrl",replace:!0,template:e.get("ui-deni-treeview.view.html"),link:function(e,c,o){e.ctrl.element=angular.element(c),n.setDefaultValues(e.ctrl,c,t),r.implementApi(e,e.ctrl.element,n),i.implementEvents(e)}}}angular.module("uiDeniTreeview").directive("uiDeniTreeview",e),e.$inject=["$templateCache","uiDeniTreeviewConstant","uiDeniTreeviewService","uiDeniTreeviewEventsService","uiDeniTreeviewApiService"]}(),function(){function e(e,t,n){return{restrict:"E",scope:{},bindToController:{item:"=",level:"=",parent:"=?",theme:"@?"},controller:"uiDeniTreeviewItemController",controllerAs:"ctrl",replace:!0,template:e.get("ui-deni-treeview-item.view.html"),link:function(e,i,r){e.ctrl.element=angular.element(i),t.setDefaultValues(e,i),n.implementEvents(e),e.$watch("ctrl.item.expanded",function(n,i){n!==i&&(t.expandItem(e,e.ctrl.item),e.$emit("onexpand",e.ctrl.item))})}}}angular.module("uiDeniTreeview").directive("uiDeniTreeviewItem",e),e.$inject=["$templateCache","uiDeniTreeviewItemService","uiDeniTreeviewItemEventsService"]}();